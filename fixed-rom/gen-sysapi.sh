#!/bin/sh -

sym_file="$1"
api_file="$2"
tmp_file="${api_file}.tmp"
api_file_ub=`basename ${api_file} | tr '.-' '_'`

rm -f "$tmp_file"

cat << _EOF > "$tmp_file"
;
; DO NOT EDIT!!  This file is automatically generated from ${sym_file}.
;
; Copyright (c) 2023 Jason R. Thorpe.
; All rights reserved.
;
; Redistribution and use in source and binary forms, with or without
; modification, are permitted provided that the following conditions
; are met:
; 1. Redistributions of source code must retain the above copyright
;    notice, this list of conditions and the following disclaimer.
; 2. Redistributions in binary form must reproduce the above copyright
;    notice, this list of conditions and the following disclaimer in the
;    documentation and/or other materials provided with the distribution.
;
; THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
; IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
; OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
; IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
; BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
; AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
; OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
; OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
; SUCH DAMAGE.
;
_EOF

SysSubr_list=`grep "^SysSubr_[5|6]" "$sym_file" | cut -f 1 | cut -d _ -f 2`
SysAddr_list=`grep "^SysAddr_" "$sym_file" | cut -f 1 | grep -v _size`
SysAddr_size_list=`grep "^SysAddr_" "$sym_file" | cut -f 1 | grep _size`

cat << _EOF >> "$tmp_file"

	if	${api_file_ub}_included
	else
${api_file_ub}_included	equ	1

;
; System Subroutines.  These are called indirectly via a jump table in
; the fixed ROM.  These are meant as something between library routines
; and system calls.
;
; Invoke them like so:
;
;	jsr	[SysSubr_whatever]
;
_EOF
(for subr_targ in $SysSubr_list; do
	subr_name=`grep "${subr_targ}$" "$sym_file" | cut -f 1`
	subr_val=`grep "^SysSubr_${subr_targ}" "$sym_file" | cut -f 3`
	#
	# Handle some SysSubr symbol renames:
	#
	#	warm_boot -> exit
	#
	case x"$subr_name" in
	xwarm_boot)	subr_name=exit		;;
	esac
	if [ x"$subr_name" != x ]; then
		awk -v subr_targ=$subr_targ -v subr_name=$subr_name -v \
		    subr_val=$subr_val \
			'{
				if ($1 == "SysSubr_" subr_targ) {
					printf("SysSubr_%s equ %s\n",
					    subr_name, subr_val)
				}
			 }' "$sym_file"
	fi
done) | sort >> "$tmp_file"

cat << _EOF >> "$tmp_file"

;
; System Addresses.  These are the region addresses (and corresponding
; region sizes) that are exported to programs.  All other address regions
; should be considered reserved to the operating system.
;
_EOF
(for addr_name in $SysAddr_list; do
	addr_val=`grep "^${addr_name}	" "$sym_file" | cut -f 3`
	size_val=`grep "^${addr_name}_size" "$sym_file" | cut -f 3`
	echo "${addr_name} equ ${addr_val}"
	echo "${addr_name}_size equ ${size_val}"
done) | sort >> "$tmp_file"

cat << _EOF >> "$tmp_file"

	endif	; ${api_file_ub}_included
_EOF

mv "$tmp_file" "$api_file"
