;
; Copyright (c) 2023 Jason R. Thorpe.
; All rights reserved.
;
; Redistribution and use in source and binary forms, with or without
; modification, are permitted provided that the following conditions
; are met:
; 1. Redistributions of source code must retain the above copyright
;    notice, this list of conditions and the following disclaimer.
; 2. Redistributions in binary form must reproduce the above copyright
;    notice, this list of conditions and the following disclaimer in the
;    documentation and/or other materials provided with the distribution.
;
; THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
; IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
; OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
; IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
; BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
; AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
; OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
; OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
; SUCH DAMAGE.
;

;
; Client implementation of the NABU HCCA Application Communication Protocol.
;
; We're not running on a NABU, obviously, and don't have a "Home Cable
; Computer Adaptor", but we're not going to let that stop us!
;

;
; NHACP context - 32 bytes
;
;	u16	getc routine
;	u16	putc routine
;	u16	data buffer
;	u16	data length
;	u8	session ID + 1 (0 == $FF+1 == invalid session)
;	u8	request length
;	u8[22]	req/reply scratch buffer
;
nhctx_getc		equ	0
nhctx_putc		equ	(nhctx_getc + 2)
nhctx_data		equ	(nhctx_putc + 2)
nhctx_datalen		equ	(nhctx_data + 2)
nhctx_session		equ	(nhctx_datalen + 2)
nhctx_reqlen		equ	(nhctx_session + 1)
nhctx_scratch		equ	(nhctx_reqlen + 1)
nhctx_req		equ	nhctx_scratch
nhctx_reply		equ	nhctx_scratch
nhctx_ctxsz		equ	(nhctx_scratch + 22)

nhctx_req_session	equ	(nhctx_req + 1)	; session ID field
nhctx_req_flen		equ	(nhctx_req + 2)	; frame length field
nhctx_req_type		equ	(nhctx_req + 4)	; msg type
nhctx_req_args		equ	(nhctx_req + 5)	; 1st byte after msg type

nhctx_reply_len		equ	nhctx_reply
nhctx_reply_type	equ	(nhctx_reply_len + 2)

;
; nhacp_req_init --
;	Macro to initialize the request scratch area in the
;	NHACP context.
;
; Arguments --
;	Quoted short name of NHACP request, e.g.:
;
;		nhacp_req_init "STORAGE_OPEN"
;
;	U - NHACP context
;
; Returns --
;	None.
;
; Clobbers --
;	A, B
;
nhacp_req_init		macro
	lda	#NHACP_MSG_\1
	ldb	#NHACP_MSG_\1_len
	jsr	nhacp_req_init0
	endm
