#!/bin/sh -

bankno="$1"
sym_file="$2"
bcall_file="$3"
tmp_file="${bcall_file}.tmp"
bcall_file_ub=`basename ${bcall_file} | tr '.-' '_'`

rm -f "$tmp_file"

cat << _EOF > "$tmp_file"
;
; DO NOT EDIT!!  This file is automatically generated from ${sym_file}.
;
; Copyright (c) 2023 Jason R. Thorpe.
; All rights reserved.
;
; Redistribution and use in source and binary forms, with or without
; modification, are permitted provided that the following conditions
; are met:
; 1. Redistributions of source code must retain the above copyright
;    notice, this list of conditions and the following disclaimer.
; 2. Redistributions in binary form must reproduce the above copyright
;    notice, this list of conditions and the following disclaimer in the
;    documentation and/or other materials provided with the distribution.
;
; THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
; IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
; OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
; IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
; BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
; AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
; OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
; OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
; SUCH DAMAGE.
;
_EOF

BCall_list=`grep "^BCall_[45]" "$sym_file" | cut -f 1 | cut -d _ -f 2`

cat << _EOF >> "$tmp_file"

	if	${bcall_file_ub}_included
	else
${bcall_file_ub}_included	equ	1

_EOF
(for bcall_targ in $BCall_list; do
	bcall_name=`grep "${bcall_targ}$" "$sym_file" | cut -f 1`
	bcall_val=`grep "^BCall_${subr_targ}" "$sym_file" | cut -f 3`
	if [ x"$bcall_name" != x ]; then
		awk -v bcall_targ=$bcall_targ -v bcall_name=$bcall_name -v \
		    bcall_val=$bcall_val \
			'{
				if ($1 == "BCall_" bcall_targ) {
					printf("BCall_%s equ %s\n",
					    bcall_name, bcall_val)
				}
			 }' "$sym_file"
	fi
done) | sort >> "$tmp_file"

BCall_list=`grep "^BCall_" "$tmp_file" | cut -d ' ' -f 1`
for bcall_name in $BCall_list; do
	cat << _EOF >> "$tmp_file"

	if Use_${bcall_name}
${bcall_name}_desc
	fdb	${bcall_name}
	fcc	${bankno}
	endif
_EOF
done

cat << _EOF >> "$tmp_file"

	endif	; ${bcall_file_ub}_included
_EOF

mv "$tmp_file" "$bcall_file"
